From 317434168025912046f32f8a9e82c98fdb3bfcd3 Mon Sep 17 00:00:00 2001
From: Robert Marko <robimarko@gmail.com>
Date: Sun, 26 Aug 2018 12:08:51 +0000
Subject: [PATCH] RTC-JZ4740-Init-the-regulator-register-on-startup

From f05b1ecd7e4fde7e69320a4b7be461636e982991 Mon Sep 17 00:00:00 2001
From: Paul Cercueil <paul@crapouillou.net>
Date: Thu, 13 Sep 2012 00:09:20 +0200
Subject: [PATCH 5/7] RTC: JZ4740: Init the "regulator" register on startup.

This register controls the accuracy of the RTC. uC/OS-II use
the RTC as a 100Hz clock, and writes a completely wrong value
on that register, that we have to overwrite if we want a working
real-time clock.

Signed-off-by: Paul Cercueil <paul@crapouillou.net>
---
 drivers/rtc/rtc-jz4740.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/rtc/rtc-jz4740.c b/drivers/rtc/rtc-jz4740.c
index 64989aff..26a7549b 100644
--- a/drivers/rtc/rtc-jz4740.c
+++ b/drivers/rtc/rtc-jz4740.c
@@ -311,6 +311,7 @@ static int jz4740_rtc_probe(struct platform_device *pdev)
 	struct jz4740_rtc *rtc;
 	uint32_t scratchpad;
 	struct resource *mem;
+	struct clk *rtc_clk;
 	const struct platform_device_id *id = platform_get_device_id(pdev);
 	const struct of_device_id *of_id = of_match_device(
 			jz4740_rtc_of_match, &pdev->dev);
@@ -342,6 +343,15 @@ static int jz4740_rtc_probe(struct platform_device *pdev)
 		return PTR_ERR(rtc->clk);
 	}
 
+	/* TODO: initialize the ADJC bits (25:16) to fine-tune
+	 * the accuracy of the RTC */
+	ret = jz4740_rtc_reg_write(rtc, JZ_REG_RTC_REGULATOR,
+				(clk_get_rate(rtc_clk) - 1) & 0xffff);
+	clk_put(rtc_clk);
+
+	if (ret)
+		dev_warn(&pdev->dev, "Could not update RTC regulator register\n");
+
 	spin_lock_init(&rtc->lock);
 
 	platform_set_drvdata(pdev, rtc);
-- 
2.17.1

